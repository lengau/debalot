package debian_package;
// Debian package.
//
// Messages for both source and binary package, as well as some small enums
// and other helpers.
import "person.proto";

enum Priority {
    REQUIRED = 0;
    IMPORTANT = 1;
    STANDARD = 2;
    OPTIONAL = 3;
    EXTRA = 4;
}

message Relation {
    required string name = 1;
    optional string version = 2;

    enum Relationship {
        STRICTLY_EARLIER = 0;
        EARLIER_OR_EQUAL = 1;
        EQUAL = 2;
        LATER_OR_EQUAL = 3;
        STRICTLY_LATER = 4;
    }
    optional Relationship relationship = 3;
}

message Field {
    required string key = 1;
    required string value = 2;
}

enum Urgency {
    LOW = 0;
    MEDIUM = 1;
    HIGH = 2;
    EMERGENCY = 3;
    CRITICAL = 4;
}

message Change {
    // Each Change object represents an entry in a Changelog file.

    // name is useful if the source package's name changes. If name is empty
    // or doesn't exist, the package's name will be used.
    optional string name = 1;
    required string version = 2;
    repeated string distributions = 3;
    required Urgency urgency = 4;
    optional string urgency_commentary = 5;
    repeated string entries = 6;
    optional person.Person maintainer = 7;
    optional int64 timestamp = 8;
    // The timezone is in minutes offset from UTC. For example:
    // US/Eastern standard time is UTC-0500, saved as -300.
    // Africa/Johannesburg is UTC+0200, saved as 120.
    optional sint32 timezone = 9;
}

message SourcePackage {
    required string name = 1; // Source
    optional person.Person maintainer = 2;
    repeated person.Person uploader = 16;
    optional string section = 3;
    optional Priority priority = 4 [default = STANDARD];

    repeated Relation build_depends = 5;
    repeated Relation build_depends_indep = 6;
    repeated Relation build_conflicts = 7;
    repeated Relation build_conflicts_indep = 8;

    message StandardsVersion {
        required uint32 major_version = 1;
        required uint32 minor_version = 2;
        optional uint32 major_patch = 3;
        optional uint32 minor_patch = 4;
    }
    optional StandardsVersion standards_version = 9;
    optional string homepage = 10;

    repeated Change changelog = 11;

    repeated BinaryPackage binary_packages = 12;

    // Version Control System fields. Vcs-Browser is as defined in the Debian
    // Policy Manual. vcs is a generic Field that allows flexibility in version
    // control systems. The key is expected to be only the name of the VCS,
    // and the value is the ordinary value of the field. For example, the vcs
    // field for Dpkg would have the key 'Git' and the value
    // 'git://anonscm.debian.org/dpkg/dpkg.git'.
    optional string vcs_browser = 17; // Vcs-Browser
    repeated Field vcs = 18;

    // We need the name of the original tarball to open and modify the file.
    // Any library using this protobuf should end up making the tarball name
    // "{name}_{version}.orig.tar.{compression-type}", but we should allow
    // different tarball names.
    optional string original_tarball_name = 13;
    // Occasionally we might want to manage the package as a single file.
    // When we do so, we need a spot for the original tarball.
    optional bytes original_tarball = 19;

    // When we're placing everything in a single file, there may be
    // miscellaneous files that we want to include and later extract.
    message MiscFile {
        required string name = 1;
        required bytes contents = 2;
    }
    repeated MiscFile misc_files = 20;


    // additional_fields are used for items that are one-off use cases, and
    // which are not listed in the Debian Policy Manual. Fields that are listed
    // in the Debian Policy Manual should be added to this definition.
    repeated Field additional_field = 99;

    // Extensions are intended for use defining additional fields that are not
    // used by Debian. For example, fields used by other Debian-based distros
    // or fields specific to certain organizations.
    extensions 100 to 199;
}

message BinaryPackage {
    required string name = 1; // Package
    required string architecture = 2;
    optional string version = 3;
    optional string section = 4;
    optional Priority priority = 5 [default = STANDARD];
    optional bool essential = 16; // High number because this is rarely set.

    repeated Relation depends = 6;
    repeated Relation recommends = 7;
    repeated Relation suggests = 8;
    // enhances and pre_depends are rare, hence high numbers.
    repeated Relation enhances = 17;
    repeated Relation pre_depends = 18;

    // Packages rarely break or conflict with each other.
    repeated Relation conflicts = 19;
    repeated Relation breaks = 20;

    repeated string provides = 9;
    repeated Relation replaces = 10;

    optional person.Person maintainer = 11;
    optional string description = 12;
    optional string homepage = 13;

    optional string package_type = 14 [default = 'deb'];
    repeated Relation built_using = 21;


    // additional_fields are used for items that are one-off use cases, and
    // which are not listed in the Debian Policy Manual. Fields that are listed
    // in the Debian Policy Manual should be added to this definition.
    repeated Field additional_field = 99;

    // Extensions are intended for use defining additional fields that are not
    // used by Debian. For example, fields used by other Debian-based distros
    // or fields specific to certain organizations.
    extensions 100 to 199;
}
