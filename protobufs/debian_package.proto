package debian_package;
// Debian package.
//
// Messages for both source and binary package, as well as some small enums
// and other helpers.
import "person.proto";

enum Priority {
    REQUIRED = 0;
    IMPORTANT = 1;
    STANDARD = 2;
    OPTIONAL = 3;
    EXTRA = 4;
}

message Relation {
    required string name = 1;
    optional string version = 2;

    enum Relationship {
        STRICTLY_EARLIER = 0;
        EARLIER_OR_EQUAL = 1;
        EQUAL = 2;
        LATER_OR_EQUAL = 3;
        STRICTLY_LATER = 4;
    }
    optional Relationship relationship = 3;

    // If the package we depend on (or are otherwise related to) is part of our
    // package structure, we should reference it directly.
    optional BinaryPackage related_pkg = 4;
}

message Field {
    required string key = 1;
    required string value = 2;
}

message SourcePackage {
    required string name = 1; // Source
    optional person.Person maintainer = 2;
    repeated person.Person uploader = 16;
    optional string section = 3;
    optional Priority priority = 4 [default = STANDARD];

    repeated Relation build_depends = 5;
    repeated Relation build_depends_indep = 6;
    repeated Relation build_conflicts = 7;
    repeated Relation build_conflicts_indep = 8;

    message StandardsVersion {
        required uint32 major_version = 1;
        required uint32 minor_version = 2;
        optional uint32 major_patch = 3;
        optional uint32 minor_patch = 4;
    }
    optional StandardsVersion standards_version = 9;
    optional string homepage = 10;

    // Version Control System fields. Vcs-Browser is as defined in the Debian
    // Policy Manual. vcs is a generic Field that allows flexibility in version
    // control systems. The key is expected to be only the name of the VCS,
    // and the value is the ordinary value of the field. For example, the vcs
    // field for Dpkg would have the key 'Git' and the value
    // 'git://anonscm.debian.org/dpkg/dpkg.git'.
    optional string vcs_browser = 17; // Vcs-Browser
    repeated Field vcs = 18;


    // additional_fields are used for items that are one-off use cases, and
    // which are not listed in the Debian Policy Manual. Fields that are listed
    // in the Debian Policy Manual should be added to this definition.
    repeated Field additional_field = 99;

    // Extensions are intended for use defining additional fields that are not
    // used by Debian. For example, fields used by other Debian-based distros
    // or fields specific to certain organizations.
    extensions 100 to 199;
}

message BinaryPackage {
    required string name = 1; // Package
    required SourcePackage source = 2;
    required string architecture = 3;
    optional string version = 4;
    optional string section = 5;
    optional Priority priority = 6 [default = STANDARD];
    optional bool essential = 16; // High number because this is rarely set.

    repeated Relation depends = 7;
    repeated Relation recommends = 8;
    repeated Relation suggests = 9;
    // enhances and pre_depends are rare, hence high numbers.
    repeated Relation enhances = 17;
    repeated Relation pre_depends = 18;

    // Packages rarely break or conflict with each other.
    repeated Relation conflicts = 19;
    repeated Relation breaks = 20;

    repeated string provides = 10;
    repeated Relation replaces = 11;

    optional person.Person maintainer = 12;
    optional string description = 13;
    optional string homepage = 14;

    optional string package_type = 15 [default = 'deb'];
    repeated Relation built_using = 21;


    // additional_fields are used for items that are one-off use cases, and
    // which are not listed in the Debian Policy Manual. Fields that are listed
    // in the Debian Policy Manual should be added to this definition.
    repeated Field additional_field = 99;

    // Extensions are intended for use defining additional fields that are not
    // used by Debian. For example, fields used by other Debian-based distros
    // or fields specific to certain organizations.
    extensions 100 to 199;
}
